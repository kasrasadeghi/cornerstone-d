(Program (#name (* TopLevel)))
(TopLevel (| 
  Def 
  ))

(TypeList (types (* #type)))

(Def (def #name ParamList #type Do))
(ParamList (params (* Param)))
(Param (#name #type))

(ArgList (args (* Value)))
(CallLike (| 
  Call 
  //CallVargs 
  //CallTail 
  //Become
  ))
(Call (call #name TypeList #type ArgList))
//(CallVargs (call-vargs #name TypeList #type ArgList))
//(CallTail (call-tail #name TypeList #type ArgList))
//(Become (become #name TypeList #type ArgList))

(Stmt (| 
  Let 
  Return 
  Do
  ))
(Let (let #name Expr))
(Return (| 
  ReturnValue 
  ))
(ReturnValue (return-value Expr #type))
(Do (do (* Stmt)))

(Expr (| 
  CallLike 
  Value
  ))
(Value (| Literal StrGet #name))
(Literal (| #int #bool))
(StrGet (str-get #int))